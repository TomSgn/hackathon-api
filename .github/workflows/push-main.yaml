name: Push checks

on:
  push:
    branches:
      - main
      - ci-cd
env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GKE_CLUSTER_NAME: cluster-demo
  GKE_REGION: europe-west1

jobs:
  lint:
    name: Lint (formatting issues only)
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Run Fmt (format also documentation snippets)
        run: gofmt -l ./**/*.go

  build:
    name: Build 
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    needs:
      - lint
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Login to GAR
        uses: docker/login-action@v1
        with:
          registry: europe-west3-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GKE_SA_KEY }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get short SHA commit
        id: commit
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: europe-west3-docker.pkg.dev/cagip-hackathon-eq05-inno0-27/hackathon/hackathon-api:${{ steps.commit.sha_short }}

  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.GKE_REGION }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      - uses: azure/setup-helm@v1
        with:
          version: '3.7.2'
      - name: Get short SHA commit
        id: commit
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Deploy
        run: |
          if helm upgrade hackathon-api ./charts/hackathon-api --install --namespace default --set image.tag="${{ steps.commit.sha_short }}" --wait --timeout 1m; then
            echo "deployment succeeded!"
          else
            helm rollback hackathon-api --namespace default
          fi
