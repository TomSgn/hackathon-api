name: Push checks

on:
  push:
    branches:
      - main
      - ci-cd

jobs:
  lint:
    name: Lint (formatting issues only)
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Run Fmt (format also documentation snippets)
        run: gofmt -l ./**/*.go

  build:
    name: Build 
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: 'projects/892650738590/locations/global/workloadIdentityPools/github-action-pool/providers/github-provider'
          service_account: 'github-action@cagip-hackathon-eq05-inno0-27.iam.gserviceaccount.com'
      - name: Login to GAR
        uses: docker/login-action@v1
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get short SHA commit
        id: commit
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: europe-west3-docker.pkg.dev/cagip-hackathon-eq05-inno0-27/hackaton/hackathon-api:${{ steps.commit.outputs.sha_short }}

  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: build docker image 
        run: |
          echo "Do some deploy stuff"

